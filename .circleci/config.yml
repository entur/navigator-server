version: 2
aliases:
- &install-dependencies
  name: Install Node Dependencies
  command: npm install
- &GCP-auth
  name: GCP Authenticate
  command: |
    echo 'export GCLOUD_SERVICE_KEY="$GCLOUD_SERVICE_KEY"' >> $BASH_ENV
    /tools/gcp_authenticate.sh
- &docker-login
  name: Docker login
  command: |
    docker login -u _json_key --password-stdin https://eu.gcr.io <<< "${DOCKER_PASSWORD}"
- &tag-git-version
  name: Tag git commit with build version and push to github
  command: |
    git config --global user.email "circleci@entur.no"
    git config --global user.name "circleci"
    git tag $VERSION
    git push origin $VERSION
- &create-image-version
    name: Create new image version and store to env var and as file in workspace
    command: |
      echo "export VERSION=$CIRCLE_BRANCH-v$CIRCLE_BUILD_NUM-$(echo -n $CIRCLE_SHA1 | tail -c 8)"  >> $BASH_ENV
      echo "$CIRCLE_BRANCH-v$CIRCLE_BUILD_NUM-$(echo -n $CIRCLE_SHA1 | tail -c 8)" > version
- &docker-build-and-push
    name: Docker build and push
    command: |
      IMAGE="eu.gcr.io/entur-system-1287/${CIRCLE_PROJECT_REPONAME}"
      echo "Image: ${IMAGE}"
      docker build -t $IMAGE .
      docker tag $IMAGE "${IMAGE}":"${VERSION}"
      docker push $IMAGE
- &save-dependency-cache
  paths:
  - node_modules
  key: node_modules-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
- &restore-dependency-cache
  name: Restore dependency cache
  keys:
  - node_modules-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}

jobs:
  install:
    docker:
    - image: eu.gcr.io/entur-system-1287/circleci-toolbox-image
      auth:
        username: _json_key
        password: $DOCKER_PASSWORD
    steps:
    - checkout
    - run: *install-dependencies
    - save-cache: *save-dependency-cache
  build:
    docker:
    - image: eu.gcr.io/entur-system-1287/circleci-toolbox-image
      auth:
        username: _json_key
        password: $DOCKER_PASSWORD
    steps:
    - checkout
    - restore-cache: *restore-dependency-cache
    - run: *GCP-auth
    - setup_remote_docker:
        docker_layer_caching: true
    - run: *create-image-version
    - run: *tag-git-version
    - run: *docker-login
    - run: *docker-build-and-push

workflows:
  version: 2
  install-test-build-deploy:
    jobs:
    - install:
        context: org-carbon
    - build:
        context: org-carbon
        requires:
        - install
        filters:
          branches:
            only:
            - rutebanken_develop